version: '{build}'

branches:
  only:
  - master
  - vNext

skip_tags: true

clone_folder: C:\projects\libgit2sharp

environment:
  coverity_token:
    secure: nuzUT+HecXGIi3KaPd/1hgFEZJan/j6+oNbPV75JKjk=
  coverity_email:
    secure: eGVilNg1Yuq+Xj+SW8r3WCtjnzhoDV0sNJkma4NRq7A=
  version : 0.22.0
  matrix:
  - xunit_runner: xunit.console.clr4.exe
    Arch: 64
  - xunit_runner: xunit.console.clr4.x86.exe
    Arch: 32

matrix:
  fast_finish: true

install:
- ps: |
    Write-Host "Commit being built = " -NoNewLine
    Write-Host $Env:APPVEYOR_REPO_COMMIT -ForegroundColor "Green"
    Write-Host "Current build version = " -NoNewLine
    Write-Host $Env:VERSION -ForegroundColor "Green"
    Write-Host "Target branch = " -NoNewLine
    Write-Host $Env:APPVEYOR_REPO_BRANCH -ForegroundColor "Green"
    Write-Host "Is a Pull Request = " -NoNewLine
    Write-Host $($Env:APPVEYOR_PULL_REQUEST_NUMBER -ne $null) -ForegroundColor "Green"

    $BuildDate = (Get-Date).ToUniversalTime().ToString("yyyyMMddHHmmss")
    Write-Host "Build UTC date = " -NoNewLine
    Write-Host $BuildDate -ForegroundColor "Green"

    $VersionSuffix = ""
    If ($Env:APPVEYOR_REPO_BRANCH -ne "master")
    {
      $VersionSuffix = "-pre$BuildDate"
    }
    $Version = "$($Env:VERSION)$($VersionSuffix)"
    $Env:ASSEMBLY_INFORMATIONAL_VERSION = $Version
    Write-Host "Assembly informational version = " -NoNewLine
    Write-Host $Env:ASSEMBLY_INFORMATIONAL_VERSION -ForegroundColor "Green"

    $Env:SHOULD_PUBLISH_COVERITY_ANALYSIS = $($Env:APPVEYOR_SCHEDULED_BUILD -eq $True)
    Write-Host "Should publish Coverity analysis = " -NoNewLine
    Write-Host $Env:SHOULD_PUBLISH_COVERITY_ANALYSIS -ForegroundColor "Green"

    $Env:SHOULD_PUBLISH_NUGET_ARTIFACT = $($Env:APPVEYOR_PULL_REQUEST_NUMBER -eq $null -and $Env:SHOULD_PUBLISH_COVERITY_ANALYSIS -eq $False)
    Write-Host "Should publish Nuget artifact = " -NoNewLine
    Write-Host $Env:SHOULD_PUBLISH_NUGET_ARTIFACT -ForegroundColor "Green"

    cinst sourcelink -y

assembly_info:
  patch: true
  file: LibGit2Sharp\Properties\AssemblyInfo.cs
  assembly_version: '$(VERSION)'
  assembly_file_version: '$(VERSION)'
  assembly_informational_version: '$(ASSEMBLY_INFORMATIONAL_VERSION)'

cache:
  - packages

before_build:
- ps: nuget restore "$Env:APPVEYOR_BUILD_FOLDER\LibGit2Sharp.sln"

build_script:
- ps: |
    & cov-build.exe --dir cov-int msbuild "$Env:APPVEYOR_BUILD_FOLDER\LibGit2Sharp.sln" `
      /verbosity:normal `
      /p:Configuration=Release `
      /logger:"C:\Program Files\AppVeyor\BuildAgent\Appveyor.MSBuildLogger.dll" `
      /property:ExtraDefine="LEAKS_IDENTIFYING"

test_script:
- ps: |
    If ($Env:SHOULD_PUBLISH_COVERITY_ANALYSIS -eq $False)
    {
      & "$Env:xunit_runner" "$Env:APPVEYOR_BUILD_FOLDER\LibGit2Sharp.Tests\bin\Release\LibGit2Sharp.Tests.dll" /appveyor
    }

after_test:
- ps: |
    If ($Env:SHOULD_PUBLISH_COVERITY_ANALYSIS -eq $False)
    {
      & "$Env:APPVEYOR_BUILD_FOLDER\nuget.package\BuildNugetPackage.ps1" `
        -commitSha "$Env:APPVEYOR_REPO_COMMIT" `
        -postBuild  { sourcelink index `
                        -pr LibGit2Sharp.csproj `
                        -pp Configuration Release `
                        -nf Core\NativeDllName.cs `
                        -nf Core\UniqueIdentifier.cs `
                        -nf Properties\AssemblyInfo.cs `
                        -r .. `
                        -u 'https://raw.githubusercontent.com/libgit2/libgit2sharp/{0}/%var2%' }

      Add-Type -Path "$Env:APPVEYOR_BUILD_FOLDER\LibGit2Sharp\bin\Release\LibGit2Sharp.dll"
      Write-Host "LibGit2Sharp version = $([LibGit2Sharp.GlobalSettings]::Version)" -ForegroundColor "Magenta"

      If ($Env:SHOULD_PUBLISH_NUGET_ARTIFACT -eq $True)
      {
        Get-ChildItem "$Env:APPVEYOR_BUILD_FOLDER\LibGit2sharp\*.nupkg" | % { Push-AppveyorArtifact $_.FullName -FileName $_.Name }
      }
    }
    Else
    {
      & nuget install PublishCoverity -Version 0.9.0 -ExcludeVersion -OutputDirectory .\packages

      & .\packages\PublishCoverity\PublishCoverity.exe compress `
        -i "$Env:APPVEYOR_BUILD_FOLDER\cov-int" `
        -o "$Env:APPVEYOR_BUILD_FOLDER\$Env:APPVEYOR_PROJECT_NAME.zip"

      & .\packages\PublishCoverity\PublishCoverity.exe publish `
        -t "$Env:coverity_token" `
        -e "$Env:coverity_email" `
        -r "$Env:APPVEYOR_REPO_NAME" `
        -z "$Env:APPVEYOR_BUILD_FOLDER\$env:APPVEYOR_PROJECT_NAME.zip" `
        -d "CI server scheduled build." `
        --codeVersion "$Env:ASSEMBLY_INFORMATIONAL_VERSION" `
        --nologo
    }

notifications:
- provider: Email
  to:
    - emeric.fermas@gmail.com
  on_build_status_changed: true
