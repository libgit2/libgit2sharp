name: CI
on:
  push:
    branches: [master, release-*]
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'
      - '[0-9]+.[0-9]+.[0-9]+-*'
  pull_request:
  workflow_dispatch:
env:
  DOTNET_NOLOGO: true
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x
      - name: Build
        run: dotnet build LibGit2Sharp.sln --configuration Release
      - name: Upload packages
        uses: actions/upload-artifact@v3
        with:
          name: NuGet packages
          path: bin/Packages/
          retention-days: 7
  test:
    name: Test / ${{ matrix.os }} / ${{ matrix.arch }} / ${{ matrix.tfm }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        arch: [ amd64 ]
        os: [windows-latest, macos-latest]
        tfm: [ net472, net6.0 ]
        exclude:
          - os: macos-latest
            tfm: net472
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x
      - name: Run ${{ matrix.tfm }} tests
        run: dotnet test LibGit2Sharp.sln --configuration Release --framework ${{ matrix.tfm }} --logger "GitHubActions" /p:ExtraDefine=LEAKS_IDENTIFYING
  test-linux:
    name: Test / ${{ matrix.distro }} / ${{ matrix.arch }} / ${{ matrix.tfm }}
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        arch: [ amd64 ]
        # arch: [ amd64, arm64 ]
        distro: [ alpine.3.15, alpine.3.16, alpine.3.17, centos.7, debian.10, debian.11, fedora.36, ubuntu.18.04, ubuntu.20.04, ubuntu.22.04 ]
        sdk:  [ '6.0' ]
        include:
          - sdk: '6.0'
            tfm: net6.0
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup QEMU
        if: matrix.arch == 'arm64'
        run: docker run --rm --privileged multiarch/qemu-user-static:register --reset
      - name: Run ${{ matrix.tfm }} tests
        run: |
            test_command="dotnet test LibGit2Sharp.sln --configuration Release -p:TargetFrameworks=${{ matrix.tfm }} --logger "GitHubActions" -p:ExtraDefine=LEAKS_IDENTIFYING"
            docker run -t --rm --platform linux/${{ matrix.arch }} -v "$PWD:/app" gittools/build-images:${{ matrix.distro }}-sdk-${{ matrix.sdk }} sh -c "$test_command"
